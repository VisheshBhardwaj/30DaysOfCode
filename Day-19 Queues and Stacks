
import java.util.Scanner;

public class Solution {
	
	char stack[]= new char[100];
	int top=0;
	void pushCharacter(char c) {
		 
	stack[top]=c;
	top++;
		
	}
	int top4=top;
//......................................................
	private char popCharacter() {
		top--;
		char xx=stack[top];
		stack[top]=0;
		
		return xx;
	}
//......................................................	
	int top2=0;
	char queue[]=new char[100];
	void enqueueCharacter(char c) {
		queue[top2]=c;
		top2++;
		}
		
	
//......................................................
	int top3=0;
	private char dequeueCharacter() {
		char xxx=queue[top3];
		top3++;
		return xxx;
	}
	
	
	public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        String input = scan.nextLine();
        scan.close();

        // Convert input String to an array of characters:
        char[] s = input.toCharArray();

        // Create a Solution object:
        Day19 p = new Day19();

        // Enqueue/Push all chars to their respective data structures:
        for (char c : s) {
            p.pushCharacter(c);
            p.enqueueCharacter(c);
        }
        

        // Pop/Dequeue the chars at the head of both data structures and compare them:
        boolean isPalindrome = true;
        for (int i = 0; i < s.length/2; i++) {
            if (p.popCharacter() != p.dequeueCharacter()) {
                isPalindrome = false;                
                break;
            }
        }

        //Finally, print whether string s is palindrome or not.
        System.out.println( "The word, " + input + ", is " 
                           + ( (!isPalindrome) ? "not a palindrome." : "a palindrome." ) );
    }
	
